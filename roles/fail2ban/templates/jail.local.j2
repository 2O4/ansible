{{ ansible_managed | comment }}

[DEFAULT]

bantime.increment = true

{% if fail2ban_bantime_rndtime is defined %}
bantime.rndtime = {{ fail2ban_bantime_rndtime }}
{% endif %}

{% if fail2ban_bantime_maxtime is defined %}
bantime.maxtime = {{ fail2ban_bantime_maxtime }}
{% endif %}

bantime.factor = {{ fail2ban_bantime_factor }}

{% if fail2ban_bantime_multipliers is not defined %}
bantime.formula = {{ fail2ban_bantime_formula }}
{% else %}
bantime.multipliers = {{ fail2ban_bantime_multipliers }}
{% endif %}

bantime.overalljails = {{ fail2ban_bantime_overalljails }}

ignoreself = true

ignoreip = {{ fail2ban_ignoreips | join(' ') }}

ignorecommand =

bantime = {{ fail2ban_bantime }}

findtime = {{ fail2ban_findtime }}

maxretry = {{ fail2ban_maxretry }}

maxmatches = %(maxretry)s

backend = {{ fail2ban_backend }}

usedns = warn

logencoding = auto

enabled = false

mode = normal

filter = %(__name__)s[mode=%(mode)s]


#
# ACTIONS
#

destemail = root@localhost

sender = root@<fq-hostname>

mta = sendmail

protocol = tcp

chain = <known/chain>

port = 0:65535

fail2ban_agent = Fail2Ban/%(fail2ban_version)s

#
# Action shortcuts. To be used to define action parameter

banaction = iptables-multiport
banaction_allports = iptables-allports

action_ = %(banaction)s[port="%(port)s", protocol="%(protocol)s", chain="%(chain)s"]

# Other actions
action_mw = %(action_)s
            %(mta)s-whois[sender="%(sender)s", dest="%(destemail)s", protocol="%(protocol)s", chain="%(chain)s"]
action_mwl = %(action_)s
             %(mta)s-whois-lines[sender="%(sender)s", dest="%(destemail)s", logpath="%(logpath)s", chain="%(chain)s"]
action_xarf = %(action_)s
             xarf-login-attack[service=%(__name__)s, sender="%(sender)s", logpath="%(logpath)s", port="%(port)s"]
action_cf_mwl = cloudflare[cfuser="%(cfemail)s", cftoken="%(cfapikey)s"]
                %(mta)s-whois-lines[sender="%(sender)s", dest="%(destemail)s", logpath="%(logpath)s", chain="%(chain)s"]
action_blocklist_de  = blocklist_de[email="%(sender)s", service="%(__name__)s", apikey="%(blocklist_de_apikey)s", agent="%(fail2ban_agent)s"]
action_badips = badips.py[category="%(__name__)s", banaction="%(banaction)s", agent="%(fail2ban_agent)s"]
action_badips_report = badips[category="%(__name__)s", agent="%(fail2ban_agent)s"]
action_abuseipdb = abuseipdb

action = {{ fail2ban_action }}


#
# JAILS
#

{% for service in fail2ban_services %}
[{{ service.name }}]
enabled = {{ service.enabled | default(true) | bool | to_json }}
{% for option, value in service.items() | sort %}
{% if option not in ['name', 'enabled'] %}
{{ option }} = {{ value }}
{% endif %}
{% endfor %}

{% endfor %}
